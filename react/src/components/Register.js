import React, { useContext, useState } from 'react'
import { MyContext } from '../contexts/MyContext'

import styles from '../css/register.module.css'

function Register() {
    const { toggleNav, registerUser } = useContext(MyContext);
    const initialState = {
        userInfo: {
            email: '',
            name: '',
            surname: '',
            patronymic: '',
            phone: '',
            password: '',
            password2: '',
        },
        errorMsg: '',
        successMsg: '',
    }
    const [state, setState] = useState(initialState);

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    const submitForm = async (event) => {
        event.preventDefault();
        const data = await registerUser(state.userInfo);
        if (data.success) {
            setState({
                ...initialState,
                successMsg: data.message,
            });
        }
        // –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —É—Å–ø–µ—à–Ω–∞
        else {
            setState({
                ...state,
                successMsg: '',
                errorMsg: data.message
            });
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω–ø—É—Ç–æ–≤
    const onChangeValue = (e) => {
        setState({
            ...state,
            userInfo: {
                ...state.userInfo,
                [e.target.name]: e.target.value
            }
        });
    }

    // –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –∏–ª–∏ —É—Å–ø–µ—Ö–µ
    let successMsg = '';
    let errorMsg = '';
    if (state.errorMsg) {
        errorMsg = <div className={`${styles['alert']} alert alert-danger`}>{state.errorMsg}</div>;
    }
    if (state.successMsg) {
        successMsg = <div className={`${styles['alert']} alert alert-success`}>{state.successMsg}</div>;
    }

    return (
        <div className= {styles.registerBody}>
            <div className={styles.form}>
                <form onSubmit={submitForm} noValidate autoComplete="off">

                    <div className={`${styles['formHeader']} text-center`}>
                        –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
                    </div>

                    <div className={styles.formBody}>

                        <div className="input-group mb-3">
                            <span className="input-group-text" id="basic-addon1">üìß</span>
                            <input name="email" type="email" className="form-control"
                                required placeholder="–í–∞—à email" aria-label="Useremail"
                                aria-describedby="basic-addon1" value={state.userInfo.email} onChange={onChangeValue} />
                        </div>

                        <div className="input-group mb-3">
                            <span className="input-group-text" id="basic-addon2">‚úèÔ∏è</span>
                            <input name="name" type="text" className="form-control"
                                required placeholder="–í–∞—à–µ –∏–º—è" aria-label="Username"
                                aria-describedby="basic-addon2" value={state.userInfo.name} onChange={onChangeValue} />
                        </div>

                        <div className="input-group mb-3">
                            <span className="input-group-text" id="basic-addon3">‚úèÔ∏è</span>
                            <input name="surname" type="text" className="form-control"
                                required placeholder="–í–∞—à–∞ —Ñ–∞–º–∏–ª–∏—è" aria-label="Usersurname"
                                aria-describedby="basic-addon3" value={state.userInfo.surname} onChange={onChangeValue} />
                        </div>

                        <div className="input-group mb-3">
                            <span className="input-group-text" id="basic-addon4">‚úèÔ∏è</span>
                            <input name="patronymic" type="text" className="form-control"
                                required placeholder="–í–∞—à–µ –æ—Ç—á–µ—Å—Ç–≤–æ" aria-label="Userpatronymic"
                                aria-describedby="basic-addon4" value={state.userInfo.patronymic} onChange={onChangeValue} />
                        </div>

                        <div className="input-group mb-3">
                            <span className="input-group-text" id="basic-addon5">‚òéÔ∏è</span>
                            <input name="phone" type="phone" className="form-control"
                                required placeholder="–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞" aria-label="Userphone"
                                aria-describedby="basic-addon5" value={state.userInfo.phone} onChange={onChangeValue} />
                        </div>

                        <div className="input-group mb-3">
                            <span className="input-group-text" id="basic-addon6">üîë</span>
                            <input name="password" type="password" className="form-control"
                                required placeholder="–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å" aria-label="Password" aria-describedby="basic-addon6"
                                value={state.userInfo.password} onChange={onChangeValue} />
                        </div>

                        <div className="input-group mb-3">
                            <span className="input-group-text" id="basic-addon7">üîë</span>
                            <input name="password2" type="password" className="form-control"
                                required placeholder="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å" aria-label="Password2" aria-describedby="basic-addon7"
                                value={state.userInfo.password2} onChange={onChangeValue} />
                        </div>
                        
                        {errorMsg}    
                        {successMsg}

                        <button className={`${styles['btn']} btn`} type="submit">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>

                    </div>
                </form>

                <div className={styles.formFooter}>
                    <span>–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? </span><button className={styles.link} type="button" onClick={toggleNav}>–í–æ–π—Ç–∏</button>
                </div>
            </div>
        </div>
    );
}

export default Register